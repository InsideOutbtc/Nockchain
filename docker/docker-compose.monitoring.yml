# Docker Compose for Nockchain monitoring infrastructure
# Includes Prometheus, Grafana, Redis, and custom monitoring service

version: '3.8'

services:
  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: nockchain-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring
    depends_on:
      - redis

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.1.0
    container_name: nockchain-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=nockchain123
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring
    depends_on:
      - prometheus

  # AlertManager for handling alerts
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: nockchain-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - monitoring

  # Redis for caching and real-time data
  redis:
    image: redis:7.2-alpine
    container_name: nockchain-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - monitoring

  # Custom monitoring service
  monitoring-service:
    build:
      context: ../apps/monitoring
      dockerfile: Dockerfile
    container_name: nockchain-monitoring
    restart: unless-stopped
    ports:
      - "3002:3001"
    environment:
      - NODE_ENV=production
      - MONITORING_PORT=3001
      - REDIS_URL=redis://redis:6379
      - MINING_POOL_API_URL=http://host.docker.internal:3000
      - LOG_LEVEL=info
    volumes:
      - monitoring-logs:/app/logs
    networks:
      - monitoring
    depends_on:
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: nockchain-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: nockchain-cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge
    name: nockchain-monitoring

volumes:
  prometheus-data:
    name: nockchain-prometheus-data
  grafana-data:
    name: nockchain-grafana-data
  alertmanager-data:
    name: nockchain-alertmanager-data
  redis-data:
    name: nockchain-redis-data
  monitoring-logs:
    name: nockchain-monitoring-logs