apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: performance-optimizer-hpa
  namespace: nockchain
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: performance-optimizer
  minReplicas: 10
  maxReplicas: 200
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  - type: Pods
    pods:
      metric:
        name: concurrent_connections
      target:
        type: AverageValue
        averageValue: "500"
  - type: Object
    object:
      metric:
        name: nginx_ingress_controller_requests_per_second
      target:
        type: AverageValue
        averageValue: "1000"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 10
        periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 5
        periodSeconds: 60
      selectPolicy: Min
---
apiVersion: autoscaling/v2
kind: VerticalPodAutoscaler
metadata:
  name: performance-optimizer-vpa
  namespace: nockchain
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: performance-optimizer
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: performance-optimizer
      minAllowed:
        cpu: 500m
        memory: 1Gi
      maxAllowed:
        cpu: 4000m
        memory: 8Gi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: performance-optimizer-pdb
  namespace: nockchain
spec:
  minAvailable: 75%
  selector:
    matchLabels:
      app: performance-optimizer